@using BlazorBlocks.Shared.BlockEditor.Blocks.ImageBlock;
@using BlazorBlocks.Shared.BlockEditor.Blocks.RawTextBlock;
@using BlazorBlocks.Shared.BlockEditor.Blocks.TitleBlock;
@using BlazorBlocks.Shared.BlockEditor.Model;
@code {
    [Parameter]
    public EditorColumnModel Model { get; set; }

    [Parameter]
    public List<BlockRegistration> BlockTypes { get; set; }

    protected void AddBlock(BlockRegistration blockType)
    {
        var blockModel = Activator.CreateInstance(blockType.BlockModel) as EditorBlockBaseModel;
        if (blockModel == null) throw new InvalidOperationException($"Attempting to create a block model that is not a EditorBlockBaseModel. (It is {blockType.BlockModel.Name})");
        Model.Blocks.Add(blockModel);
    }
}

@foreach(var block in Model.Blocks)
{
    <div><DynamicComponent Type="@block.EditorType" Parameters="@block.Parameters" /></div>
    <hr />
}

@foreach(var blockType in BlockTypes)
{
    <button @onclick="() => AddBlock(blockType)">@blockType.Name</button><br />
}
<hr />