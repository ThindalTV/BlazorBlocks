@using BlazorBlocks.Shared.BlockEditor
@using BlazorBlocks.Shared.BlockEditor.Blocks.ImageBlock;
@using BlazorBlocks.Shared.BlockEditor.Blocks.RawTextBlock;
@using BlazorBlocks.Shared.BlockEditor.Blocks.TitleBlock;
@using BlazorBlocks.Shared.BlockEditor.Model;
@using BlazorBlocks.Test.WASM.Shared.BlockEditor
@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
<hr />
<div class="content">
    <Editor Model="@editorModel" />

    <button @onclick="ReRender">ReRender</button>
    <div class="row">
        @((MarkupString)renderContent)
    </div>
    <div class="row">
        <div class="col-md-12">
            <h2>Serialize</h2>
            <button @onclick="() => Import()">Load</button>
            <button @onclick="() => Export()">Export</button>
            <InputTextArea @bind-Value="@serialized" Rows="10" Cols="100" />
        </div>
    </div>
    
</div>
@code {
    EditorModel editorModel = new EditorModel();

    string renderContent;
    string serialized;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Read in and save some default blocks for testing
        editorModel.Load($$$"""{"Rows":[{"ColumnCollectionName":null,"Columns":[{"ColumnSize":"col-md-12","Blocks":[{"$modelType":"TitleBlockModel","Title":"Title"}]}]},{"ColumnCollectionName":null,"Columns":[{"ColumnSize":"col-md-4","Blocks":[{"$modelType":"RawTextBlockModel","Content":"hello from index"}]},{"ColumnSize":"col-md-7","Blocks":[{"$modelType":"ImageBlockModel","ImageUrl":"","AltText":""}]}]}]}""");
        serialized = editorModel.Serialize();
        StateHasChanged();
    }

    protected void ReRender()
    {
        renderContent = editorModel.Render();
        StateHasChanged();
    }

    protected void Import()
    {
        editorModel.Load(serialized);
        StateHasChanged();
    }

    protected void Export()
    {
        serialized = editorModel.Serialize();
    }

}