@using BlazorBlocks.BlockEditor
@using BlazorBlocks.Blocks.ImageBlock;
@using BlazorBlocks.Blocks.RawTextBlock;
@using BlazorBlocks.Blocks.TitleBlock;
@using BlazorBlocks.Model;
@using BlazorBlocks.Test.WASM.CustomBlocks.TestBlock

@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
<hr />
<div class="content">
    <BlazorBlocksEditor Model="@editorModel" OnModelUpdated="() => OnModelUpdated()" />
    <hr />
    Editor above this line
    <hr />
    Previews below this line
    <button @onclick="ReRender">Render HTML</button> <br/>
    Render test zone:
    <div class="row p-5" style="border: 1px solid #000;">
        @((MarkupString)(renderContent ?? ""))
    </div>

    <hr /><hr /><hr /><hr />


    <div class="row">
        Serialization controls:
        <div class="p-5" style="border: 1px solid #000;">
            
            <button @onclick="() => Import()" class="btn btn-primary">Load from json</button>
            <button @onclick="() => Export()" class="btn btn-primary float-end">Export to json</button><br />
            <InputTextArea class="form-control" @bind-Value="@serialized" Rows="10" Cols="100" />
        </div>
    </div>
    
</div>
@code {
    BlazorBlocksEditorModel editorModel = new BlazorBlocksEditorModel();

    string? renderContent;
    string? serialized;



    string testContent =
    """{"Rows":[{"Columns":[{"ColumnClass":"col-md-12","Blocks":[{"$modelType":"TitleBlockModel","EditorName":"Title","TitleSize":0,"Title":"Titleabc"},{"$modelType":"RawTextBlockModel","EditorName":"Raw Text","Content":"Raw text goes here"}]}],"RowTypeName":"1 column"},{"Columns":[{"ColumnClass":"col-md-4","Blocks":[{"$modelType":"RawTextBlockModel","EditorName":"Raw Text","Content":"hello from index"}]},{"ColumnClass":"col-md-7","Blocks":[{"$modelType":"ImageBlockModel","EditorName":"Image","ImageUrl":"https://i.imgur.com/uk8EhoS.png","AltText":"https://i.imgur.com/uk8EhoS.png"}]}],"RowTypeName":"2 columns"},{"Columns":[{"ColumnClass":"col-3","Blocks":[]},{"ColumnClass":"col-3","Blocks":[]},{"ColumnClass":"col-3","Blocks":[]},{"ColumnClass":"col-3","Blocks":[{"$modelType":"TestBlockModel","EditorName":"Custom Test Block","Content":"testy testy"}]}],"RowTypeName":"4 columns"}]}""";
    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Read in and save some default blocks for testing
        editorModel.Load(testContent);
        
        serialized = editorModel.GetJson();

        OnModelUpdated();

        StateHasChanged();
    }

    protected void ReRender()
    {
        renderContent = editorModel.GetHTML();
        StateHasChanged();
    }

    protected void Import()
    {
        editorModel.Load(serialized ?? "");
        StateHasChanged();
    }

    protected void Export()
    {
        serialized = editorModel.GetJson();
    }

    private void OnModelUpdated()
    {
        renderContent = editorModel.GetHTML();
        serialized = editorModel.GetJson();
    }

}